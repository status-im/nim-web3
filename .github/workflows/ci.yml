name: CI
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        target:
          - os: linux
            cpu: amd64
          - os: linux-gcc-14 # This is to use ubuntu 24 and install gcc 14. Should be removed when ubuntu-latest is 26.04
            cpu: amd64
          - os: macos
            cpu: amd64
          - os: macos
            cpu: arm64
        branch: [devel]
        include:
          - target:
              os: linux
            builder: ubuntu-latest
            shell: bash
          - target:
              os: linux-gcc-14 # This is to use ubuntu 24 and install gcc 14. Should be removed when ubuntu-latest is 26.04
            builder: ubuntu-24.04
            shell: bash
          - target:
              os: macos
              cpu: amd64
            builder: macos-13
            shell: bash
          - target:
              os: macos
              cpu: arm64
            builder: macos-latest
            shell: bash

    defaults:
      run:
        shell: ${{ matrix.shell }}

    name: '${{ matrix.target.os }}-${{ matrix.target.cpu }} (Nim ${{ matrix.branch }})'
    runs-on: ${{ matrix.builder }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Derive environment variables
        run: |
          if [[ '${{ matrix.target.cpu }}' == 'amd64' ]]; then
            PLATFORM=x64
          elif [[ '${{ matrix.target.cpu }}' == 'arm64' ]]; then
            PLATFORM=arm64
          else
            PLATFORM=x86
          fi
          echo "PLATFORM=$PLATFORM" >> $GITHUB_ENV

          ncpu=
          MAKE_CMD="make"
          case '${{ runner.os }}' in
          'Linux')
            ncpu=$(nproc)
            ;;
          'macOS')
            ncpu=$(sysctl -n hw.ncpu)
            ;;
          'Windows')
            ncpu=$NUMBER_OF_PROCESSORS
            MAKE_CMD="mingw32-make"
            ;;
          esac
          [[ -z "$ncpu" || $ncpu -le 0 ]] && ncpu=1
          echo "ncpu=$ncpu" >> $GITHUB_ENV
          echo "MAKE_CMD=${MAKE_CMD}" >> $GITHUB_ENV

      - name: Build Nim and Nimble
        run: |
          curl -O -L -s -S https://raw.githubusercontent.com/status-im/nimbus-build-system/master/scripts/build_nim.sh
          env MAKE="${MAKE_CMD} -j${ncpu}" ARCH_OVERRIDE=${PLATFORM} NIM_COMMIT=${{ matrix.branch }} \
            QUICK_AND_DIRTY_COMPILER=1 QUICK_AND_DIRTY_NIMBLE=1 CC=gcc \
            bash build_nim.sh nim csources dist/nimble NimBinaries
          echo '${{ github.workspace }}/nim/bin' >> $GITHUB_PATH

      - name: Use gcc 14
        # Should be removed when ubuntu-latest is 26.04
        if : ${{ matrix.target.os == 'linux-gcc-14' }}
        run: |
          # Add GCC-14 to alternatives
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 14
          # Set GCC-14 as the default
          sudo update-alternatives --set gcc /usr/bin/gcc-14

      - name: Run tests
        run: |
          nim --version
          nimble --version
          gcc --version
          ./ci-test.sh
